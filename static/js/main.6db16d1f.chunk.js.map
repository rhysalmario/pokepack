{"version":3,"sources":["redux/actions/cardInfoActions.js","redux/reducers/cardInfoReducer.js","packImages.js","components/Card/Card.js","components/Pack/Pack.js","components/CardList/CardList.js","components/Particles/particlesOptions.js","App.js","serviceWorker.js","index.js"],"names":["INIT_COMMONS","INIT_UNCOMMONS","INIT_RARES","initialState","commons","uncommons","rares","cardInfoReducer","state","action","type","payload","packImages","Card","props","useState","isFlipped","setIsFlipped","rarity","cardNumber","className","alt","name","src","imageUrl","onClick","Pack","isSealed","setIsSealed","useSelector","getRandom","range","Math","floor","random","toggleOpen","renderCard","length","Button","variant","size","CardList","showRarity","setShowRarity","displayCards","list","map","card","number","onChange","event","target","value","defaultValue","hidden","particlesOptions","App","sortByNumber","cards","sort","a","b","viewCardList","dispatch","useDispatch","useEffect","poketcg","where","setCode","then","data","sortedCommons","initCommons","sortedUncommons","initUncommons","sortedRares","initRares","params","document","getElementById","style","width","id","href","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6db16d1f.chunk.js","sourcesContent":["export const INIT_COMMONS = 'INIT_COMMONS';\nexport const INIT_UNCOMMONS = 'INIT_UNCOMMONS';\nexport const INIT_RARES = 'INIT_RARES';\n\nexport const initCommons = (commons) => {\n  return {\n    type: INIT_COMMONS,\n    payload: commons\n  };\n};\n\nexport const initUncommons = (uncommons) => {\n  return {\n    type: INIT_UNCOMMONS,\n    payload: uncommons\n  };\n};\n\nexport const initRares = (rares) => {\n  return {\n    type: INIT_RARES,\n    payload: rares\n  }\n}","import poketcg from 'pokemontcgsdk';\nimport { INIT_COMMONS, INIT_UNCOMMONS, INIT_RARES } from '../actions/cardInfoActions';\n\nconst initialState = {\n  commons: [],\n  uncommons: [],\n  rares: []\n};\n\nconst cardInfoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INIT_COMMONS:\n      return {\n        ...state,\n        commons : action.payload\n      }\n    case INIT_UNCOMMONS:\n      return {\n        ...state,\n        uncommons : action.payload\n      }\n    case INIT_RARES:\n      return {\n        ...state,\n        rares : action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default cardInfoReducer;","export const packImages = [\n  'https://d1rw89lz12ur5s.cloudfront.net/photo/collectorscache/file/768c3720555211e89a532318b466b769/1st%20charizard%20pack.jpg',\n  'https://d1rw89lz12ur5s.cloudfront.net/photo/collectorscache/file/2680d750555111e8942bfd5bfeaf0da0/shadowless%20blastoise.jpg',\n  'https://d1rw89lz12ur5s.cloudfront.net/photo/collectorscache/file/80669ac0555111e8ae630903bce07812/shadowless%20venusaur.jpg'\n];","import React from 'react';\nimport { useState } from 'react';\nimport './Card.css';\n\nconst Card = (props) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  // Card component displays an image and simply changes the display image when the card is flipped\n  // In a future version, I would like to implement a flipping animation\n  const flipCard = () => {\n    setIsFlipped(!isFlipped);\n  }\n  const {rarity, cardNumber} = props;\n  return(\n    isFlipped ?\n      <img className='card' alt={rarity[cardNumber].name} src={rarity[cardNumber].imageUrl}/>\n    :\n      <img className='card' onClick={flipCard} alt='Pokemon Cardback' src='https://upload.wikimedia.org/wikipedia/en/3/3b/Pokemon_Trading_Card_Game_cardback.jpg'/>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { packImages } from '../../packImages';\nimport Card from '../Card/Card';\nimport './Pack.css'\nimport Button from 'react-bootstrap/Button';\n\nconst Pack = (props) => {\n  const [isSealed, setIsSealed] = useState(true);\n  const commons = useSelector(state => state.commons);\n  const uncommons = useSelector(state => state.uncommons);\n  const rares = useSelector(state => state.rares);\n\n  // Random function used to generate random numbers for other functions\n  const getRandom = (range) => {\n    return (Math.floor(Math.random() * range));\n  }\n\n  // Changes state when the pack is opened or a new pack is taken out\n  const toggleOpen = () => {\n    setIsSealed(!isSealed);\n  }\n\n  // Generates a Card component based on the specified rarity and card number\n  const renderCard = (rarity, cardNumber) => {\n    return (\n      <Card rarity={rarity} cardNumber={cardNumber}/>\n    )}\n\n\n  // Checks if the pack is sealed or not, will display the pack or cards respectively\n  // In the future, I would like to render the Card components more eloquently rather than having so many repetitive single line statements\n  // would also want to restrict opening a new pack until all cards are flipped in a future update,\n  // and implement a flip all button\n\n\n  return(\n    <div className='packDiv'>\n      { (isSealed) ? \n      <div className='sealedContainer'>\n        <img className='packWrapper pointer' \n          onClick={toggleOpen} alt='sealed-pack' \n          src ={`${packImages[getRandom(3)]}`} \n        /> \n      </div>\n      : \n      <div className='openedContainer'>\n        <div className='pulledCards'>\n            {renderCard(commons, getRandom(commons.length-6))} \n            {renderCard(commons, getRandom(commons.length-6))}\n            {renderCard(commons, getRandom(commons.length-6))}\n            {renderCard(commons, getRandom(commons.length-6))}\n            {renderCard(commons, getRandom(commons.length-6))}\n\n            {renderCard(commons, (getRandom(6)+(commons.length-6)))}\n            {renderCard(commons, (getRandom(6)+(commons.length-6)))}\n          \n            {renderCard(uncommons, getRandom(uncommons.length))}\n            {renderCard(uncommons, getRandom(uncommons.length))}\n            {renderCard(uncommons, getRandom(uncommons.length))}\n\n            {renderCard(rares, getRandom(rares.length))}\n        </div> \n        <Button variant='success' size='sm' className='newPack-button' onClick={toggleOpen}>New Pack</Button>\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default Pack;","import React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './CardList.css';\n\nconst CardList = (props) => {\n  const [showRarity, setShowRarity] = useState('');\n  const commons = useSelector(state => state.commons);\n  const uncommons = useSelector(state => state.uncommons);\n  const rares = useSelector(state => state.rares);\n\n  // When a different rarity is selected, the current rarity is updated in the state\n  const onRarityChange = (event) => {\n    setShowRarity(event.target.value);\n  }\n\n  // CardList is passed the rarities as props from the App's state and creates a list of the specific rarity by using the map function\n  const displayCards = (list) => {\n    return (\n      <ul className='unorderedList'>\n        { list.map(card => \n        <li className='listItem' key={card.name} >\n          {card.name} No. {card.number}\n          <img className='itemImage' alt={`${card.name} Card`} src={card.imageUrl}/>\n        </li> )}\n      </ul> \n  )}\n\n  // CardList is comprised of a select element and an ul with the designated rarity\n  // The ul is updated when the select is changed, and nested ternary operators check which rarity to display\n  return(\n    <div className='CardList-container'>\n      <h3>Set List</h3>\n      <select name='Rarity' onChange={onRarityChange}>\n        <option value='none' defaultValue hidden>By rarity...</option>\n        <option value='Common'>Common</option>\n        <option value='Uncommon'>Uncommon</option>\n        <option value='Rare'>Rare</option>\n      </select>\n    \n      { showRarity === 'Common' ?\n      displayCards(commons) : showRarity === 'Uncommon' ?\n        displayCards(uncommons) : showRarity === 'Rare' ?\n        displayCards(rares) : <p>Select a rarity from the dropdown to view the available cards of that rarity.</p>\n      }\n    </div>\n  );\n}\n\nexport default CardList;","const particlesOptions = {\n  \"particles\": {\n    \"number\": {\n        \"value\": 40,\n        \"density\": {\n            \"enable\": true,\n            \"value_area\": 800\n        }\n    },\n    \"line_linked\": {\n        \"enable\": false\n    },\n    \"move\": {\n        \"speed\": 2,\n        \"out_mode\": \"out\"\n    },\n    \"shape\": {\n        \"type\": [\n            \"image\"\n        ],\n        \"image\": [\n          {\n            \"src\": 'https://64.media.tumblr.com/5cab3bc8ad59e747226205d4aed501cd/tumblr_mmi88btyBi1spn836o7_400.png',\n            \"height\": 20,\n            \"width\": 20\n          },\n          {\n            \"src\": \"https://64.media.tumblr.com/5623406f4923edb1c293254f16c360ac/tumblr_mmi88btyBi1spn836o3_400.png\",\n            \"height\": 20,\n            \"width\": 20\n          },\n          {\n            \"src\": \"https://64.media.tumblr.com/68879c0cd61fde0e6ac5aca46d0d04e5/tumblr_mmi88btyBi1spn836o5_400.png\",\n            \"height\": 20,\n            \"width\": 20\n          },\n          {\n            \"src\": \"https://64.media.tumblr.com/dffb232f11f10df7a7b0cbbf4f89de28/tumblr_mmi88btyBi1spn836o6_400.png\",\n            \"height\": 20,\n            \"width\": 20\n          },\n          {\n            \"src\": \"https://64.media.tumblr.com/e9d0327e72bfa3daa733ac06b5fb4d25/tumblr_mmi88btyBi1spn836o1_400.png\",\n            \"height\": 20,\n            \"width\": 20\n          },\n          {\n            \"src\": \"https://64.media.tumblr.com/db0c2938524dde79f0ba5570377a3bc9/tumblr_mmi88btyBi1spn836o9_400.png\",\n            \"height\": 20,\n            \"width\": 20\n          },\n          {\n            \"src\": \"https://64.media.tumblr.com/23fcc303266711c0e7fa2c6ecc506bbb/tumblr_mmi88btyBi1spn836o10_400.png\",\n            \"height\": 20,\n            \"width\": 20\n          },\n        ]\n    },\n    \"size\": {\n        \"value\": 40,\n        \"random\": true,\n        \"anim\": {\n            \"enable\": true,\n            \"speed\": 5,\n            \"size_min\": 20,\n            \"sync\": false\n        }\n    }\n},\n\"retina_detect\": false\n};\n\nexport default particlesOptions;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport poketcg from 'pokemontcgsdk';\nimport Pack from './components/Pack/Pack';\nimport CardList from './components/CardList/CardList';\nimport Button from 'react-bootstrap/Button';\nimport Particles from 'react-particles-js';\nimport particlesOptions from './components/Particles/particlesOptions';\nimport { initCommons, initUncommons, initRares } from './redux/actions/cardInfoActions';\n\nconst App = () => {\n\n  const sortByNumber = (cards) => {\n    return cards.sort((a,b) => a.number - b.number);\n  }\n\n  let viewCardList = false;\n  let toggleCardList = () => {\n    viewCardList = (!viewCardList);\n    if(viewCardList) {\n      document.getElementById('sidebar').style.width = '0';\n    }\n    else{\n      document.getElementById('sidebar').style.width = '20%';\n    }\n  }\n\n  // Fetching the cards by rarity from the pokemon tcg api when the app is mounted\n  // Made the rarities a part of the state to easily pass to other components\n  // This probably isn't a good practice but will use a database in a future version \n  const dispatch = useDispatch();\n  \n  useEffect (() => {\n    poketcg.card.where({ rarity : 'Common', setCode : 'base1' })\n      .then(data =>{\n        let sortedCommons = sortByNumber(data);\n        dispatch(initCommons(sortedCommons));\n      })\n    \n    poketcg.card.where({ rarity : 'Uncommon', setCode : 'base1' })\n      .then(data =>{\n        let sortedUncommons = sortByNumber(data);\n        dispatch(initUncommons(sortedUncommons));\n      })\n\n    poketcg.card.where({ rarity : 'Rare', setCode : 'base1' })\n      .then(data =>{\n        let sortedRares = sortByNumber(data);\n        dispatch(initRares(sortedRares));\n      })\n\n  }, [dispatch]);\n\n  const commons = useSelector(state => state.commons);\n  const uncommons = useSelector(state => state.uncommons);\n  const rares = useSelector(state => state.rares);\n\n  return (\n    <div className='wrapper'>\n      <Particles className='particles' params={ particlesOptions }/>\n      <div className='title'>\n        <h1 className='appName'>PokéPack</h1>\n        <p>A Pokémon TCG Pack Opening Simulator</p>\n      </div >\n      <Pack /> \n      <Button variant='primary' size= 'sm' onClick={toggleCardList}>Set List</Button> {' '}\n      <div id='sidebar' className='cardList'>\n        <CardList commons={ commons } uncommons={ uncommons } rares={ rares }/>\n      </div>\n      <h6 className='footer'>Made by <a href='https://github.com/rhysalmario'>Rhys Almario</a></h6>\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport cardInfoReducer from './redux/reducers/cardInfoReducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst store = createStore(cardInfoReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}