{"version":3,"sources":["packImages.js","Components/Card/Card.js","Components/Pack/Pack.js","Components/CardList/CardList.js","App.js","serviceWorker.js","index.js"],"names":["packImages","Card","flipCard","setState","isFlipped","state","this","props","rarity","cardNumber","className","alt","name","src","imageUrl","onClick","Component","Pack","getRandom","range","Math","floor","random","toggleOpen","isSealed","renderCard","commons","uncommons","rares","length","Button","variant","size","React","CardList","onRarityChange","event","showRarity","target","value","displayCards","list","map","card","key","number","onChange","defaultValue","hidden","particlesOptions","App","cards","sort","a","b","document","getElementById","style","width","poketcg","where","setCode","then","data","sortedCommons","sortByNumber","sortedUncommons","sortedRares","params","openSidebar","id","closeSidebar","href","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dee343d4.chunk.js","sourcesContent":["export const packImages = [\n  'https://d1rw89lz12ur5s.cloudfront.net/photo/collectorscache/file/768c3720555211e89a532318b466b769/1st%20charizard%20pack.jpg',\n  'https://d1rw89lz12ur5s.cloudfront.net/photo/collectorscache/file/2680d750555111e8942bfd5bfeaf0da0/shadowless%20blastoise.jpg',\n  'https://d1rw89lz12ur5s.cloudfront.net/photo/collectorscache/file/80669ac0555111e8ae630903bce07812/shadowless%20venusaur.jpg'\n];","import React, { Component } from 'react';\nimport './Card.css';\n\nclass Card extends Component  {\n  \n  constructor() {\n    super();\n    this.state = {\n      isFlipped : false\n    }\n  }\n\n  flipCard = () => {\n    this.setState({\n      isFlipped : true\n    })\n  }\n\n  // Card component displays an image and simply changes the display image when the card is flipped\n  // In a future version, I would like to implement a flipping animation\n\n  render() {\n    const {rarity, cardNumber} = this.props;\n    return(\n      this.state.isFlipped ?\n        <img className='card' alt={rarity[cardNumber].name} src={rarity[cardNumber].imageUrl}/>\n      :\n        <img className='card' onClick={this.flipCard} alt='Pokemon Cardback' src='https://upload.wikimedia.org/wikipedia/en/3/3b/Pokemon_Trading_Card_Game_cardback.jpg'/>\n    );\n    }\n}\n\nexport default Card;","import React from 'react';\nimport { packImages } from '../../packImages';\nimport Card from '../Card/Card';\nimport './Pack.css'\nimport Button from 'react-bootstrap/Button';\n\nclass Pack extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      isSealed: true\n    }\n  }\n\n  // Random function used to generate random numbers for other functions\n  getRandom = (range) => {\n    return (Math.floor(Math.random() * range));\n  }\n\n  // Changes state when the pack is opened or a new pack is taken out\n  toggleOpen = () => {\n    this.setState(\n      { isSealed : !this.state.isSealed }\n    )\n  }\n\n  // Generates a Card component based on the specified rarity and card number\n  renderCard = (rarity, cardNumber) => {\n    return (\n      <Card rarity={rarity} cardNumber={cardNumber}/>\n    )}\n\n\n  // Checks if the pack is sealed or not, will display the pack or cards respectively\n  // In the future, I would like to render the Card components more eloquently rather than having so many repetitive single line statements\n  // would also want to restrict opening a new pack until all cards are flipped in a future update,\n  // and implement a flip all button\n\n  render(){\n    const { commons, uncommons, rares } = this.props;\n    const { isSealed } = this.state;\n    return(\n      <div>\n        { (isSealed) ? \n        <div className='sealedContainer'>\n          <img className='packWrapper pointer' \n            onClick={this.toggleOpen} alt='sealed-pack' \n            src ={`${packImages[this.getRandom(3)]}`} \n          /> \n        </div>\n        : \n        <div className='openedContainer'>\n          <div className='pulledCards'>\n              {this.renderCard(commons, this.getRandom(commons.length-6))} \n              {this.renderCard(commons, this.getRandom(commons.length-6))}\n              {this.renderCard(commons, this.getRandom(commons.length-6))}\n              {this.renderCard(commons, this.getRandom(commons.length-6))}\n              {this.renderCard(commons, this.getRandom(commons.length-6))}\n\n              {this.renderCard(commons, (this.getRandom(6)+(commons.length-6)))}\n              {this.renderCard(commons, (this.getRandom(6)+(commons.length-6)))}\n            \n              {this.renderCard(uncommons, this.getRandom(uncommons.length))}\n              {this.renderCard(uncommons, this.getRandom(uncommons.length))}\n              {this.renderCard(uncommons, this.getRandom(uncommons.length))}\n\n              {this.renderCard(rares, this.getRandom(rares.length))}\n          </div> \n          <Button variant='success' size='sm' className='newPack-button' onClick={this.toggleOpen}>New Pack</Button>\n        </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Pack;","import React, { Component } from 'react';\nimport './CardList.css';\n\nclass CardList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showRarity : ''\n    }\n  }\n\n  // When a different rarity is selected, the current rarity is updated in the state\n  onRarityChange = (event) => {\n    this.setState({\n      showRarity : event.target.value\n    });\n  }\n\n  // CardList is passed the rarities as props from the App's state and creates a list of the specific rarity by using the map function\n  displayCards = (list) => {\n    return (\n      <ul className='unorderedList'>\n        { list.map(card => \n        <li className='listItem' key={card.name} >\n          {card.name} No. {card.number}\n          <img className='itemImage' alt={`${card.name} Card`} src={card.imageUrl}/>\n        </li> )}\n      </ul> \n  )}\n\n  // CardList is comprised of a select element and an ul with the designated rarity\n  // The ul is updated when the select is changed, and nested ternary operators check which rarity to display\n  render() {\n    const { showRarity } = this.state;\n    return(\n      <div className='CardList-container'>\n        <h3>Set List</h3>\n        <select name='Rarity' onChange={this.onRarityChange}>\n          <option value='none' defaultValue hidden>By rarity...</option>\n          <option value='Common'>Common</option>\n          <option value='Uncommon'>Uncommon</option>\n          <option value='Rare'>Rare</option>\n        </select>\n      \n        { showRarity === 'Common' ?\n        this.displayCards(this.props.commons) : showRarity === 'Uncommon' ?\n          this.displayCards(this.props.uncommons) : showRarity === 'Rare' ?\n          this.displayCards(this.props.rares) : <p>Select a rarity from the dropdown to view the available cards of that rarity.</p>\n        }\n      </div>\n    );\n  }\n}\n\nexport default CardList;","import React, { Component } from 'react';\nimport './App.css';\nimport Pack from './Components/Pack/Pack';\nimport poketcg from 'pokemontcgsdk';\nimport CardList from './Components/CardList/CardList';\nimport Button from 'react-bootstrap/Button';\nimport Particles from 'react-particles-js';\n\n// Parameters for react-particles as a separate object to declutter the render for the app\nconst particlesOptions = {\n  \"particles\": {\n    \"number\": {\n        \"value\": 40,\n        \"density\": {\n            \"enable\": true,\n            \"value_area\": 800\n        }\n    },\n    \"line_linked\": {\n        \"enable\": false\n    },\n    \"move\": {\n        \"speed\": 2,\n        \"out_mode\": \"out\"\n    },\n    \"shape\": {\n        \"type\": [\n            \"image\"\n        ],\n        \"image\": [\n          {\n            \"src\": 'https://64.media.tumblr.com/5cab3bc8ad59e747226205d4aed501cd/tumblr_mmi88btyBi1spn836o7_400.png',\n            \"height\": 20,\n            \"width\": 20\n          },\n          {\n            \"src\": \"https://64.media.tumblr.com/5623406f4923edb1c293254f16c360ac/tumblr_mmi88btyBi1spn836o3_400.png\",\n            \"height\": 20,\n            \"width\": 20\n          },\n          {\n            \"src\": \"https://64.media.tumblr.com/68879c0cd61fde0e6ac5aca46d0d04e5/tumblr_mmi88btyBi1spn836o5_400.png\",\n            \"height\": 20,\n            \"width\": 20\n          },\n          {\n            \"src\": \"https://64.media.tumblr.com/dffb232f11f10df7a7b0cbbf4f89de28/tumblr_mmi88btyBi1spn836o6_400.png\",\n            \"height\": 20,\n            \"width\": 20\n          },\n          {\n            \"src\": \"https://64.media.tumblr.com/e9d0327e72bfa3daa733ac06b5fb4d25/tumblr_mmi88btyBi1spn836o1_400.png\",\n            \"height\": 20,\n            \"width\": 20\n          },\n          {\n            \"src\": \"https://64.media.tumblr.com/db0c2938524dde79f0ba5570377a3bc9/tumblr_mmi88btyBi1spn836o9_400.png\",\n            \"height\": 20,\n            \"width\": 20\n          },\n          {\n            \"src\": \"https://64.media.tumblr.com/23fcc303266711c0e7fa2c6ecc506bbb/tumblr_mmi88btyBi1spn836o10_400.png\",\n            \"height\": 20,\n            \"width\": 20\n          },\n        ]\n    },\n    \"size\": {\n        \"value\": 40,\n        \"random\": true,\n        \"anim\": {\n            \"enable\": true,\n            \"speed\": 5,\n            \"size_min\": 20,\n            \"sync\": false\n        }\n    }\n},\n\"retina_detect\": false\n}\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      commons : [],\n      uncommons : [],\n      rares : []\n    }\n  }\n\n  sortByNumber(cards) {\n    return cards.sort((a,b) => a.number - b.number);\n  }\n\n  // vanilla JS functions to control the sidebar\n  openSidebar() {\n    document.getElementById('sidebar').style.width = '20%';\n  }\n\n  closeSidebar(){\n    document.getElementById('sidebar').style.width = '0';\n  }\n\n  // Fetching the cards by rarity from the pokemon tcg api when the app is mounted\n  // Made the rarities a part of the state to easily pass to other components\n  // This probably isn't a good practice but will use a database in a future version \n  componentDidMount() {\n    poketcg.card.where({ rarity : 'Common', setCode : 'base1' })\n      .then(data =>{\n        let sortedCommons = this.sortByNumber(data);\n        this.setState({\n          commons : sortedCommons\n        })\n      })\n\n      poketcg.card.where({ rarity : 'Uncommon', setCode : 'base1' })\n      .then(data =>{\n        let sortedUncommons = this.sortByNumber(data);\n        this.setState({\n          uncommons : sortedUncommons\n        })\n      })\n\n      poketcg.card.where({ rarity : 'Rare', setCode : 'base1' })\n      .then(data =>{\n        let sortedRares = this.sortByNumber(data);\n        this.setState({\n          rares : sortedRares\n        })\n      })\n  }\n\n  render(){\n    const { commons, uncommons, rares } = this.state;\n     return (\n      <div className='wrapper'>\n        <Particles className='particles' params={particlesOptions}/>\n        <div className='title'>\n          <h1 className='appName'>PokéPack</h1>\n          <p>A Pokémon TCG Pack Opening Simulator</p>\n        </div >\n        <Pack commons={ commons } uncommons={ uncommons } rares={ rares }/>\n        <Button variant='primary' size= 'sm' onClick={this.openSidebar}>Set List</Button> {' '}\n        <div id='sidebar' className='cardList'>\n          <CardList commons={ commons } uncommons={ uncommons } rares={ rares }/>\n          <Button variant='outline-primary' size ='sm' className='closeButton' onClick={this.closeSidebar}>Close</Button>\n        </div>\n        <h6 className='footer'>Made by <a href='https://github.com/rhysalmario'>Rhys Almario</a></h6>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}